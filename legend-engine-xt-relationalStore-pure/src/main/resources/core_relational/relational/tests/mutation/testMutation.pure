// Copyright 2023 Goldman Sachs
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::executionPlan::*;
import meta::relational::mapping::*;
import meta::relational::tests::model::simple::*;
import meta::relational::tests::*;
import meta::pure::profiles::*;
import meta::pure::mutation::execution::*;

function <<test.Test>> meta::relational::tests::mutation::testMutation():Boolean[1]
{
  let mutation = {
    | let person = ^Person(firstName = 'John', lastName = 'Doe');
    Person->save(#{Person{firstName, lastName}}#, p|false, $person);
    // | Person->save(#{Person{firstName, lastName}}#, p|false, ^Person(firstName = 'John', lastName = 'Doe'));
  };
  let transaction = {|transaction($mutation, false)};
  let plan = executionPlan($transaction, simpleRelationalMapping, testRuntime(), meta::relational::extension::relationalExtensions());
  print($plan);
  assertEquals(true, true);
}